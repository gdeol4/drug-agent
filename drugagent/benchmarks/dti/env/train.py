# DO NOT CHANGE START
import sys
import os
parent_folder = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
sys.path.append(parent_folder)
# DO NOT CHANGE END

# other imports goes under the above block eg. agent_tool

import pandas as pd
import numpy as np

# Load train, validation, and test datasets
train_data = pd.read_csv("train.csv")
val_data = pd.read_csv("val.csv")
test_data = pd.read_csv("test.csv")

print(f"Loaded {len(train_data)} training samples, {len(val_data)} validation samples, and {len(test_data)} test samples.")

# Example: Print the first few rows of the training data
print(train_data.head())

X_train_drug = train_data['Drug'] # smile string
X_train_protein = train_data['Protein'] #amino acid sequence
y_train = train_data['Y'] # binary classification label: 0 or 1


X_val_drug = val_data['Drug']
X_val_protein = val_data['Protein']
y_val = val_data['Y']

# ***********************************************
# In this part of the code, write and train the model on the above dataset to perform the task.
# This part should populate the variable train_roc_auc and valid_roc_auc on the model selected
# ***********************************************


# ***********************************************
# End of the main training module
# ***********************************************

print("Train ROC AUC Score: " + str(train_roc_auc))
print("Validation ROC AUC Score: " + str(valid_roc_auc))

X_test_drug = test_data['Drug']
X_test_protein = test_data['Protein']

# Placeholder for prediction probabilities (values between 0 and 1).
# Replace this with the actual prediction probabilities generated by your trained model.
test_preds = np.random.uniform(0, 1, size=len(test_data))

test_data['Predicted'] = test_preds

output_file = "submission.csv" #do not change submission file name
test_data.to_csv(output_file, index=False)

print(f"Submission file saved to {output_file}.")